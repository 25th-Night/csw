# Generated by Django 4.2.7 on 2023-11-14 07:35

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):
    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        ("job", "0002_alter_detailregion_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성 여부")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="갱신일")),
                ("name", models.CharField(max_length=30, verbose_name="스킬")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="skillthroughmodel",
            name="content_type",
        ),
        migrations.RemoveField(
            model_name="skillthroughmodel",
            name="tag",
        ),
        migrations.RemoveField(
            model_name="tagthroughmodel",
            name="content_type",
        ),
        migrations.RemoveField(
            model_name="tagthroughmodel",
            name="tag",
        ),
        migrations.AlterModelOptions(
            name="recruit",
            options={"ordering": ["-created_at"]},
        ),
        migrations.RenameField(
            model_name="recruit",
            old_name="detail_regions",
            new_name="detail_region",
        ),
        migrations.RemoveField(
            model_name="recruit",
            name="category",
        ),
        migrations.RemoveField(
            model_name="recruit",
            name="skill",
        ),
        migrations.RemoveField(
            model_name="recruit",
            name="tag",
        ),
        migrations.AddField(
            model_name="company",
            name="tags",
            field=taggit.managers.TaggableManager(
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="recruit",
            name="categories",
            field=models.ManyToManyField(
                related_name="recruits", to="job.category", verbose_name="카테고리"
            ),
        ),
        migrations.AddField(
            model_name="recruit",
            name="min_career",
            field=models.IntegerField(default=0, verbose_name="최소 경력년수"),
        ),
        migrations.AddField(
            model_name="recruit",
            name="site",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recruits",
                to="job.site",
                verbose_name="사이트",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="recruit",
            name="status",
            field=models.BooleanField(default=True, verbose_name="공고등록 상태"),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name="recruit",
            index=models.Index(
                fields=["-created_at"], name="job_recruit_created_0808d5_idx"
            ),
        ),
        migrations.DeleteModel(
            name="SkillThroughModel",
        ),
        migrations.DeleteModel(
            name="TagThroughModel",
        ),
        migrations.AddField(
            model_name="recruit",
            name="skills",
            field=models.ManyToManyField(
                related_name="recruits", to="job.skill", verbose_name="스킬"
            ),
        ),
    ]
